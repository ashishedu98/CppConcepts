#include <bits/stdc++.h>
using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int t;cin>>t;
  while(t--){
      int n,wt;cin>>n>>wt;
      int val[n],weight[n];
      for(int i=0;i<n;i++)cin>>val[i];
      for(int i=0;i<n;i++)cin>>weight[i];
      int dp[wt+1];memset(dp,0,sizeof(dp));
      for(int i=0;i<n;++i)
       for(int j=wt;j>0;--j)
       if(weight[i]<=j)
          dp[j]=max(dp[j],val[i]+dp[j-weight[i]]);
       cout<<dp[wt]<<"\n";    
  }
	return 0;
}

-----------------------------------------------------------------------------------------------------------------------------------------

#include<bits/stdc++.h>
using namespace std;
int dp[1001][1001];
int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int w;
        cin>>w;
        int val[n];
        int wt[n];
        for(int i=0;i<n;i++)
        cin>>val[i];
        
        for(int i=0;i<n;i++)
        cin>>wt[i];
        
        
        for(int i=0;i<=n;i++)
        {
            
            for(int j=0;j<=w;j++)
            {
                if(i==0||j==0)
                {
                    dp[i][j]=0;
                }
                else if(wt[i-1]<=j)
                {
                    dp[i][j]=max(dp[i-1][j],val[i-1]+dp[i-1][j-wt[i-1]]);
                }
                else
                dp[i][j]=dp[i-1][j];
            }
        }
        cout<<dp[n][w]<<endl;
       // memset(dp,0,sizeof(dp));
        
    }
	return 0;
}

--------------------------------------------------------------------------------------------------------------------------------------

Input:
2
28
83
55 61 51 75 17 22 4 13 39 28 77 49 46 91 14 67 88 62 25 37 69 38 59 62 48 88 100 53 
96 16 34 53 88 6 50 26 76 10 8 4 37 18 73 54 30 31 97 2 28 24 2 30 79 77 33 86 
16
98
20 16 45 73 99 87 38 53 99 99 38 65 22 17 17 51 
31 21 78 53 18 66 61 4 11 65 16 99 87 91 44 23
Output:
474
356
