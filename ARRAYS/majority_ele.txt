//Seperate Array to store repetations
int majority(int arr[],int n)
{
    
	int table[100001]={0};
    
	int max=-1;
    
	for(int i=0;i<n;i++)
	{
        
		table[arr[i]]+=1;
        
		if(table[arr[i]]>(n/2))
		{
            
			max=arr[i];
        
		}
    
	}
    
	return max;

}

------------------------------------------------------------------//Moores Voting Algorithm

void findMajority(int arr[], int n) 
{ 
    int maxCount = 0;  
    int index = -1; // sentinels 
    for(int i = 0; i < n; i++) 
    { 
        int count = 0; 
        for(int j = 0; j < n; j++) 
        { 
            if(arr[i] == arr[j]) 
            count++; 
        } 
          
        // update maxCount if count of  
        // current element is greater 
        if(count > maxCount) 
        { 
            maxCount = count; 
            index = i; 
        } 
    } 
      
    // if maxCount is greater than n/2  
    // return the corresponding element  
    if (maxCount > n/2) 
       cout << arr[index] << endl; 
      
    else
        cout << "No Majority Element" << endl; 
} 