#include <bits/stdc++.h>

using namespace std;

// Complete the hourglassSum function below.
int  hourglassSum(vector<vector<int>> arr) {
    vector<int>sum;
    int row=0,col=0;
    int lastrow=(arr.size())-3;
    int lastcol=(arr[0].size())-3;
    while(1){
        int tempsum=0;
        for(int i=row;i<row+3;i++){
            for(int j=col;j<col+3;j++){
                tempsum+=arr[i][j];
            }
        }
        tempsum=tempsum-arr[row+1][col]-arr[row+1][col+2];
        sum.push_back(tempsum);
        if(col<lastcol)
            col++;
        else if(row<lastrow && col==lastcol)
           { col=0;
            row++;
           }
        else
            { auto a=max_element(sum.begin(),sum.end());
                int x=distance(sum.begin(),a);
                return sum[x];
            }
        }
    
    }

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    vector<vector<int>> arr(6);
    for (int i = 0; i < 6; i++) {
        arr[i].resize(6);

        for (int j = 0; j < 6; j++) {
            cin >> arr[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int result = hourglassSum(arr);

    fout << result << "\n";

    fout.close();

    return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------
Input (stdin)
1 1 1 0 0 0
0 1 0 0 0 0
1 1 1 0 0 0
0 0 2 4 4 0
0 0 0 2 0 0
0 0 1 2 4 0

Expected Output
19
