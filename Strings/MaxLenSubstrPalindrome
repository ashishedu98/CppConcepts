#include<bits/stdc++.h>

using namespace std;

string longestPalindrome(string A) {
    
    int i,high,low,len,start=0,max=1,even=0;
    len=A.size();
    if(len%2==0){
        even=1;
    }
    for(i=1;i<len;i++){
        low=i-1;
        high=i;
        while(low>=0 && high<len && A[low]==A[high]){
            if(high-low+1>max){
                max=high-low+1;
                start=low;
            }
            --low;
            ++high;
        }
        low=i-1;
        high=i+1;
        while(low>=0 && high<len && A[low]==A[high]){
            if(high-low+1>max){
                max=high-low+1;
                start=low;
            }
            --low;
            ++high;
        }
        
    }
    return A.substr (start,max);
}
-----------------------------------------------------------------------------------------------------------------------------------------
int main(){
    int t;
    cin>>t;
    while(t--){
        string str;
        cin>>str;
        cout<<longestPalindrome(str)<<endl;
    }
    return 0;
}


#include <bits/stdc++.h>
#include<string.h>
using namespace std;

int main() {
	//code
	int j;
	cin>>j;
	while(j--){
	string str;
	cin>>str;
	int n=str.length();
	
	int flag=0;
	for(int i=n;i>=0;i--){
	    for(int j=0;j<n-i;j++){
	        string tempst=str.substr(j,i+1);
	        char tempch[i],tempch1[i];
	        strcpy(tempch,tempst.c_str());
	        //cout<<tempch<<" ";
	        strcpy(tempch1,tempst.c_str());
	   
	        //string tempst(temp1);
	        reverse(tempch,(tempch+i+1));
	        //cout<<tempch<<endl;
	        if (strcmp(tempch,tempch1)==0){
	            cout<<tempst<<endl;
	            flag=1;
	            break;
	        }
	    }
	    if(flag==1)
	        break;
	}
	if(flag==0)
	    cout<<str[0];
	cout<<endl;
	}
	return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------
Input:
1
aaaabbaa

Output:
aabbaa
